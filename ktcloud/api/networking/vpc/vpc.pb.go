// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v4.22.3
// source: ktcloud/api/networking/vpc.proto

package vpc

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// VPC 메시지 정의
type VPCResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	VpcId         string                 `protobuf:"bytes,1,opt,name=vpc_id,json=vpcId,proto3" json:"vpc_id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Cidr          string                 `protobuf:"bytes,3,opt,name=cidr,proto3" json:"cidr,omitempty"`
	Status        string                 `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VPCResponse) Reset() {
	*x = VPCResponse{}
	mi := &file_ktcloud_api_networking_vpc_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VPCResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VPCResponse) ProtoMessage() {}

func (x *VPCResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ktcloud_api_networking_vpc_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VPCResponse.ProtoReflect.Descriptor instead.
func (*VPCResponse) Descriptor() ([]byte, []int) {
	return file_ktcloud_api_networking_vpc_proto_rawDescGZIP(), []int{0}
}

func (x *VPCResponse) GetVpcId() string {
	if x != nil {
		return x.VpcId
	}
	return ""
}

func (x *VPCResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *VPCResponse) GetCidr() string {
	if x != nil {
		return x.Cidr
	}
	return ""
}

func (x *VPCResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

// 요청 및 응답 메시지 정의
type CreateVPCRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Cidr          string                 `protobuf:"bytes,2,opt,name=cidr,proto3" json:"cidr,omitempty"`
	ProjectId     string                 `protobuf:"bytes,3,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateVPCRequest) Reset() {
	*x = CreateVPCRequest{}
	mi := &file_ktcloud_api_networking_vpc_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateVPCRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateVPCRequest) ProtoMessage() {}

func (x *CreateVPCRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ktcloud_api_networking_vpc_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateVPCRequest.ProtoReflect.Descriptor instead.
func (*CreateVPCRequest) Descriptor() ([]byte, []int) {
	return file_ktcloud_api_networking_vpc_proto_rawDescGZIP(), []int{1}
}

func (x *CreateVPCRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateVPCRequest) GetCidr() string {
	if x != nil {
		return x.Cidr
	}
	return ""
}

func (x *CreateVPCRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

type DeleteVPCRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	VpcId         string                 `protobuf:"bytes,1,opt,name=vpc_id,json=vpcId,proto3" json:"vpc_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteVPCRequest) Reset() {
	*x = DeleteVPCRequest{}
	mi := &file_ktcloud_api_networking_vpc_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteVPCRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteVPCRequest) ProtoMessage() {}

func (x *DeleteVPCRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ktcloud_api_networking_vpc_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteVPCRequest.ProtoReflect.Descriptor instead.
func (*DeleteVPCRequest) Descriptor() ([]byte, []int) {
	return file_ktcloud_api_networking_vpc_proto_rawDescGZIP(), []int{2}
}

func (x *DeleteVPCRequest) GetVpcId() string {
	if x != nil {
		return x.VpcId
	}
	return ""
}

type ListVPCsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListVPCsRequest) Reset() {
	*x = ListVPCsRequest{}
	mi := &file_ktcloud_api_networking_vpc_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListVPCsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListVPCsRequest) ProtoMessage() {}

func (x *ListVPCsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ktcloud_api_networking_vpc_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListVPCsRequest.ProtoReflect.Descriptor instead.
func (*ListVPCsRequest) Descriptor() ([]byte, []int) {
	return file_ktcloud_api_networking_vpc_proto_rawDescGZIP(), []int{3}
}

type ListVPCsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Vpcs          []*VPCResponse         `protobuf:"bytes,1,rep,name=vpcs,proto3" json:"vpcs,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListVPCsResponse) Reset() {
	*x = ListVPCsResponse{}
	mi := &file_ktcloud_api_networking_vpc_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListVPCsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListVPCsResponse) ProtoMessage() {}

func (x *ListVPCsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ktcloud_api_networking_vpc_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListVPCsResponse.ProtoReflect.Descriptor instead.
func (*ListVPCsResponse) Descriptor() ([]byte, []int) {
	return file_ktcloud_api_networking_vpc_proto_rawDescGZIP(), []int{4}
}

func (x *ListVPCsResponse) GetVpcs() []*VPCResponse {
	if x != nil {
		return x.Vpcs
	}
	return nil
}

type GetVPCRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	VpcId         string                 `protobuf:"bytes,1,opt,name=vpc_id,json=vpcId,proto3" json:"vpc_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetVPCRequest) Reset() {
	*x = GetVPCRequest{}
	mi := &file_ktcloud_api_networking_vpc_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetVPCRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVPCRequest) ProtoMessage() {}

func (x *GetVPCRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ktcloud_api_networking_vpc_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVPCRequest.ProtoReflect.Descriptor instead.
func (*GetVPCRequest) Descriptor() ([]byte, []int) {
	return file_ktcloud_api_networking_vpc_proto_rawDescGZIP(), []int{5}
}

func (x *GetVPCRequest) GetVpcId() string {
	if x != nil {
		return x.VpcId
	}
	return ""
}

var File_ktcloud_api_networking_vpc_proto protoreflect.FileDescriptor

var file_ktcloud_api_networking_vpc_proto_rawDesc = string([]byte{
	0x0a, 0x20, 0x6b, 0x74, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x2f, 0x76, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x1a, 0x6b, 0x74, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x70, 0x63, 0x1a, 0x1c,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x64, 0x0a, 0x0b,
	0x56, 0x50, 0x43, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x76,
	0x70, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x70, 0x63,
	0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x64, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x64, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x22, 0x59, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x50, 0x43, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69,
	0x64, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x64, 0x72, 0x12, 0x1d,
	0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x22, 0x29, 0x0a,
	0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x56, 0x50, 0x43, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x15, 0x0a, 0x06, 0x76, 0x70, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x76, 0x70, 0x63, 0x49, 0x64, 0x22, 0x11, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74,
	0x56, 0x50, 0x43, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x4f, 0x0a, 0x10, 0x4c,
	0x69, 0x73, 0x74, 0x56, 0x50, 0x43, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x3b, 0x0a, 0x04, 0x76, 0x70, 0x63, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e,
	0x6b, 0x74, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x70, 0x63, 0x2e, 0x56, 0x50, 0x43, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x04, 0x76, 0x70, 0x63, 0x73, 0x22, 0x26, 0x0a, 0x0d,
	0x47, 0x65, 0x74, 0x56, 0x50, 0x43, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x15, 0x0a,
	0x06, 0x76, 0x70, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x70, 0x63, 0x49, 0x64, 0x32, 0xa8, 0x03, 0x0a, 0x04, 0x56, 0x50, 0x43, 0x73, 0x12, 0x77, 0x0a,
	0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x50, 0x43, 0x12, 0x2c, 0x2e, 0x6b, 0x74, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x69, 0x6e, 0x67, 0x2e, 0x76, 0x70, 0x63, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x50,
	0x43, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x6b, 0x74, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e,
	0x67, 0x2e, 0x76, 0x70, 0x63, 0x2e, 0x56, 0x50, 0x43, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x13, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0d, 0x3a, 0x01, 0x2a, 0x22, 0x08, 0x2f, 0x76,
	0x32, 0x2f, 0x76, 0x70, 0x63, 0x73, 0x12, 0x62, 0x0a, 0x09, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x56, 0x50, 0x43, 0x12, 0x2c, 0x2e, 0x6b, 0x74, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x70, 0x63,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x56, 0x50, 0x43, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x27, 0x2e, 0x6b, 0x74, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x70, 0x63, 0x2e, 0x56,
	0x50, 0x43, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x65, 0x0a, 0x08, 0x4c, 0x69,
	0x73, 0x74, 0x56, 0x50, 0x43, 0x73, 0x12, 0x2b, 0x2e, 0x6b, 0x74, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x2e,
	0x76, 0x70, 0x63, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x50, 0x43, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x6b, 0x74, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x70, 0x63,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x50, 0x43, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x5c, 0x0a, 0x06, 0x47, 0x65, 0x74, 0x56, 0x50, 0x43, 0x12, 0x29, 0x2e, 0x6b, 0x74,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x50, 0x43, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x6b, 0x74, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x2e,
	0x76, 0x70, 0x63, 0x2e, 0x56, 0x50, 0x43, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42,
	0x3b, 0x5a, 0x39, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x68,
	0x6f, 0x6f, 0x6e, 0x68, 0x6f, 0x2f, 0x6b, 0x74, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x61, 0x70, 0x69,
	0x73, 0x2f, 0x6b, 0x74, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x2f, 0x76, 0x70, 0x63, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_ktcloud_api_networking_vpc_proto_rawDescOnce sync.Once
	file_ktcloud_api_networking_vpc_proto_rawDescData []byte
)

func file_ktcloud_api_networking_vpc_proto_rawDescGZIP() []byte {
	file_ktcloud_api_networking_vpc_proto_rawDescOnce.Do(func() {
		file_ktcloud_api_networking_vpc_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_ktcloud_api_networking_vpc_proto_rawDesc), len(file_ktcloud_api_networking_vpc_proto_rawDesc)))
	})
	return file_ktcloud_api_networking_vpc_proto_rawDescData
}

var file_ktcloud_api_networking_vpc_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_ktcloud_api_networking_vpc_proto_goTypes = []any{
	(*VPCResponse)(nil),      // 0: ktcloud.api.networking.vpc.VPCResponse
	(*CreateVPCRequest)(nil), // 1: ktcloud.api.networking.vpc.CreateVPCRequest
	(*DeleteVPCRequest)(nil), // 2: ktcloud.api.networking.vpc.DeleteVPCRequest
	(*ListVPCsRequest)(nil),  // 3: ktcloud.api.networking.vpc.ListVPCsRequest
	(*ListVPCsResponse)(nil), // 4: ktcloud.api.networking.vpc.ListVPCsResponse
	(*GetVPCRequest)(nil),    // 5: ktcloud.api.networking.vpc.GetVPCRequest
}
var file_ktcloud_api_networking_vpc_proto_depIdxs = []int32{
	0, // 0: ktcloud.api.networking.vpc.ListVPCsResponse.vpcs:type_name -> ktcloud.api.networking.vpc.VPCResponse
	1, // 1: ktcloud.api.networking.vpc.VPCs.CreateVPC:input_type -> ktcloud.api.networking.vpc.CreateVPCRequest
	2, // 2: ktcloud.api.networking.vpc.VPCs.DeleteVPC:input_type -> ktcloud.api.networking.vpc.DeleteVPCRequest
	3, // 3: ktcloud.api.networking.vpc.VPCs.ListVPCs:input_type -> ktcloud.api.networking.vpc.ListVPCsRequest
	5, // 4: ktcloud.api.networking.vpc.VPCs.GetVPC:input_type -> ktcloud.api.networking.vpc.GetVPCRequest
	0, // 5: ktcloud.api.networking.vpc.VPCs.CreateVPC:output_type -> ktcloud.api.networking.vpc.VPCResponse
	0, // 6: ktcloud.api.networking.vpc.VPCs.DeleteVPC:output_type -> ktcloud.api.networking.vpc.VPCResponse
	4, // 7: ktcloud.api.networking.vpc.VPCs.ListVPCs:output_type -> ktcloud.api.networking.vpc.ListVPCsResponse
	0, // 8: ktcloud.api.networking.vpc.VPCs.GetVPC:output_type -> ktcloud.api.networking.vpc.VPCResponse
	5, // [5:9] is the sub-list for method output_type
	1, // [1:5] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_ktcloud_api_networking_vpc_proto_init() }
func file_ktcloud_api_networking_vpc_proto_init() {
	if File_ktcloud_api_networking_vpc_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_ktcloud_api_networking_vpc_proto_rawDesc), len(file_ktcloud_api_networking_vpc_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_ktcloud_api_networking_vpc_proto_goTypes,
		DependencyIndexes: file_ktcloud_api_networking_vpc_proto_depIdxs,
		MessageInfos:      file_ktcloud_api_networking_vpc_proto_msgTypes,
	}.Build()
	File_ktcloud_api_networking_vpc_proto = out.File
	file_ktcloud_api_networking_vpc_proto_goTypes = nil
	file_ktcloud_api_networking_vpc_proto_depIdxs = nil
}
